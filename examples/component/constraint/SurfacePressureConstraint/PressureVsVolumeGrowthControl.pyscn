import Sofa

import os
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/'

def createScene(rootNode):

                rootNode.createObject('RequiredPlugin', pluginName='SoftRobots')
                rootNode.createObject('VisualStyle', displayFlags='showVisualModels hideBehaviorModels showCollisionModels hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe')

                rootNode.createObject('FreeMotionAnimationLoop')
                rootNode.createObject('GenericConstraintSolver', maxIterations='500', printLog='0', tolerance = '0.0000001')
             
                rootNode.createObject('BackgroundSetting', color='0 0.168627 0.211765')
                
                #bunnyPressure
                bunnyPressure = rootNode.createChild('bunnyPressure')
                bunnyPressure.createObject('EulerImplicit', name='odesolver')
                bunnyPressure.createObject('SparseLDLSolver', name='preconditioner')
                
                bunnyPressure.createObject('MeshVTKLoader', name='loader', filename=path+'Hollow_Stanford_Bunny.vtu')
                bunnyPressure.createObject('TetrahedronSetTopologyContainer', src='@loader', name='container')
                bunnyPressure.createObject('TetrahedronSetTopologyModifier')
                bunnyPressure.createObject('TetrahedronSetTopologyAlgorithms', template='Vec3d')
                bunnyPressure.createObject('TetrahedronSetGeometryAlgorithms', template='Vec3d')
                
                bunnyPressure.createObject('MechanicalObject', name='tetras', template='Vec3d')
                bunnyPressure.createObject('UniformMass', totalMass='0.5')
                bunnyPressure.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', poissonRatio='0.3',  youngModulus='18000')
		  
                bunnyPressure.createObject('BoxROI', name='boxROI', box='-5 -6 -5  5 -4.5 5', drawBoxes='true', position="@tetras.rest_position", tetrahedra="@container.tetrahedra")
                bunnyPressure.createObject('RestShapeSpringsForceField', points='@boxROI.indices', stiffness='1e12')
                
                bunnyPressure.createObject('LinearSolverConstraintCorrection')
                #bunnyPressure.createObject('UncoupledConstraintCorrection')


		#bunnyPressure/cavity
                cavity = bunnyPressure.createChild('cavity')
                cavity.createObject('MeshObjLoader', name='loader', filename=path+'Hollow_Bunny_Body_Cavity.obj')
                cavity.createObject('Mesh', src='@loader', name='topo')
                cavity.createObject('MechanicalObject', name='cavity')
                cavity.createObject('SurfacePressureConstraint', triangles='@topo.triangles', value='40')
                cavity.createObject('BarycentricMapping', name='mapping',  mapForces='false', mapMasses='false')                
                
                
		#bunnyPressure/bunnyPressureVisu
                bunnyPressureVisu = bunnyPressure.createChild('visu')
                bunnyPressureVisu.createObject('TriangleSetTopologyContainer', name='container')
                bunnyPressureVisu.createObject('TriangleSetTopologyModifier')
                bunnyPressureVisu.createObject('TriangleSetTopologyAlgorithms', template='Vec3d')
                bunnyPressureVisu.createObject('TriangleSetGeometryAlgorithms', template='Vec3d')
                bunnyPressureVisu.createObject('Tetra2TriangleTopologicalMapping', name='Mapping', input="@../container", output="@container")
                
                bunnyPressureVisu.createObject('OglModel', template='ExtVec3f', color='0.3 0.2 0.2 0.6')
                bunnyPressureVisu.createObject('IdentityMapping')
                
                
                
                
                #bunnyVolume
                bunnyVolume = rootNode.createChild('bunnyVolume')
                bunnyVolume.createObject('EulerImplicit')
                bunnyVolume.createObject('SparseLDLSolver')
                
                bunnyVolume.createObject('MeshVTKLoader', name='loader', filename=path+'Hollow_Stanford_Bunny.vtu', translation="15 0 0")
                bunnyVolume.createObject('TetrahedronSetTopologyContainer', src='@loader', name='container')
                bunnyVolume.createObject('TetrahedronSetTopologyModifier')
                bunnyVolume.createObject('TetrahedronSetTopologyAlgorithms', template='Vec3d')
                bunnyVolume.createObject('TetrahedronSetGeometryAlgorithms', template='Vec3d')
                
                bunnyVolume.createObject('MechanicalObject', name='tetras', template='Vec3d')
                bunnyVolume.createObject('UniformMass', totalMass='0.5')
                bunnyVolume.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', poissonRatio='0.3',  youngModulus='18000')
		  
                bunnyVolume.createObject('BoxROI', name='boxROI', box='10 -6 -5  20 -4.5 5', drawBoxes='true', position="@tetras.rest_position", tetrahedra="@container.tetrahedra")
                bunnyVolume.createObject('RestShapeSpringsForceField', points='@boxROI.indices', stiffness='1e12')
                
                bunnyVolume.createObject('LinearSolverConstraintCorrection')
                #bunnyVolume.createObject('UncoupledConstraintCorrection')


		#bunnyVolume/cavity
                cavity = bunnyVolume.createChild('cavity')
                cavity.createObject('MeshObjLoader', name='loader', filename=path+'Hollow_Bunny_Body_Cavity.obj', translation="15 0 0")
                cavity.createObject('Mesh', src='@loader', name='topo')
                cavity.createObject('MechanicalObject', name='cavity')
                cavity.createObject('SurfacePressureConstraint', triangles='@topo.triangles', value='15', valueType="volumeGrowth")
                cavity.createObject('BarycentricMapping', name='mapping',  mapForces='false', mapMasses='false')                
                
                
		#bunnyVolume/bunnyVolumeVisu
                bunnyVolumeVisu = bunnyVolume.createChild('visu')
                bunnyVolumeVisu.createObject('TriangleSetTopologyContainer', name='container')
                bunnyVolumeVisu.createObject('TriangleSetTopologyModifier')
                bunnyVolumeVisu.createObject('TriangleSetTopologyAlgorithms', template='Vec3d')
                bunnyVolumeVisu.createObject('TriangleSetGeometryAlgorithms', template='Vec3d')
                bunnyVolumeVisu.createObject('Tetra2TriangleTopologicalMapping', name='Mapping', input="@../container", output="@container")
                
                bunnyVolumeVisu.createObject('OglModel', template='ExtVec3f', color='0.3 0.3 0.3 0.6', translation="15 0 0")
                bunnyVolumeVisu.createObject('IdentityMapping')


                return rootNode
