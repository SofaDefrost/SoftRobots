# -*- coding: utf-8 -*-

import Sofa

import os
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/'


def createScene(rootNode):

                rootNode.createObject('RequiredPlugin', pluginName='SoftRobots')
                rootNode.createObject('RequiredPlugin', name='SoftRobots.Inverse')
                rootNode.createObject('VisualStyle', displayFlags="showVisualModels hideBehaviorModels showCollisionModels \
                                        hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe")

                rootNode.createObject('FreeMotionAnimationLoop')

                rootNode.createObject('QPInverseProblemSolver', printLog='0', epsilon="1e-1",\
                maxIterations="1000", tolerance="1e-14")
                rootNode.createObject('DefaultPipeline', verbose="0")
                rootNode.createObject('BruteForceBroadPhase', name="N2")
                rootNode.createObject('BVHNarrowPhase')
                rootNode.createObject('DefaultContactManager', response="FrictionContact", responseParams="mu=0")
                rootNode.createObject('LocalMinDistance', name="Proximity", alarmDistance="5", contactDistance="1")

                rootNode.createObject('BackgroundSetting', color=[0, 0.168627, 0.211765])
                rootNode.findData('gravity').value="0 0 -981.0"
                rootNode.findData('dt').value=0.01


                ##########################################
                # Effector goal for interactive control  #
                ##########################################
                goal = rootNode.createChild('goal')
                goal.createObject('EulerImplicitSolver', firstOrder=True)
                goal.createObject('CGLinearSolver', iterations='100', tolerance="1e-5", threshold="1e-5")
                goal.createObject('MechanicalObject', name='goalMO',
                        position='0 0 8')
                goal.createObject('SphereCollisionModel', radius="1")
                #goal.createObject('AnimationEditor', listening="1", filename="Accordion_Animation.txt")
                goal.createObject('UncoupledConstraintCorrection')


                ##########################################
                # FEM Model                              #
                ##########################################
                accordion = rootNode.createChild('accordion')
                accordion.createObject('EulerImplicitSolver', firstOrder=False, rayleighStiffness="0.1", rayleighMass="0.1")
                accordion.createObject('SparseLDLSolver')

                accordion.createObject('MeshVTKLoader', name='loader', filename=path+'Springy.vtk', rotation="0 0 0")
                accordion.createObject('MeshTopology', src='@loader')

                accordion.createObject('MechanicalObject', name='tetras', template='Vec3')
                accordion.createObject('UniformMass', totalMass='0.030')
                accordion.createObject('TetrahedronFEMForceField', template='Vec3', name='FEM', method='large', poissonRatio='0.3',  youngModulus='500')

                accordion.createObject('BoxROI', name='ROI1', box='-2 -2 0 2 2 0.5', drawBoxes=True)
                accordion.createObject('RestShapeSpringsForceField', points='@ROI1.indices', stiffness='1e12')
                # accordion.createObject('FixedConstraint', indices='@ROI1.indices')

                accordion.createObject('LinearSolverConstraintCorrection')


                ##########################################
                # Effector                               #
                ##########################################

                effector = accordion.createChild('effector')
                effector.createObject('MechanicalObject', name="effectorPoint",
                        position=("0 0 5"))
                effector.createObject('PositionEffector', template='Vec3',
                        indices="0",
                        effectorGoal="@../../goal/goalMO.position",
                        useDirections="1 1 1")
                effector.createObject('BarycentricMapping', mapForces=False, mapMasses=False)


                ##########################################
                # Pressure                               #
                ##########################################
                cavity = accordion.createChild('cavity')
                cavity.createObject('MeshSTLLoader', name='loader', filename=path+'Springy_Cavity.stl')
                cavity.createObject('MeshTopology', src='@loader', name='topo')
                cavity.createObject('MechanicalObject', name='cavity')
                cavity.createObject('SurfacePressureActuator', template='Vec3', name="pressure",
                    triangles='@topo.triangles',
                    minPressure="0",
                    maxVolumeGrowth="8")

                cavity.createObject('BarycentricMapping', name='mapping',  mapForces=False, mapMasses=False)


                ##########################################
                # Cables                                 #
                ##########################################

                cables = accordion.createChild('cables')
                cables.createObject('MechanicalObject', name="cablesPoint",
                        position=(
                                        "1.5 0 0.5   "+
                                        "1.5 0 1.5   "+
                                        "1.5 0 2.5   "+
                                        "1.5 0 3.5   "+
                                        "1.5 0 4.5   "+

                                        "0 -1.5 0.5   "+
                                        "0 -1.5 1.5   "+
                                        "0 -1.5 2.5   "+
                                        "0 -1.5 3.5   "+
                                        "0 -1.5 4.5   "+

                                        "-1.5 0 0.5   "+
                                        "-1.5 0 1.5   "+
                                        "-1.5 0 2.5   "+
                                        "-1.5 0 3.5   "+
                                        "-1.5 0 4.5   "))
                cables.createObject('CableActuator', template='Vec3',
                        name="cable1",
                        indices="0 1 2 3 4",
                        pullPoint="1.5 0 0",
                        minForce="0",
                        maxPositiveDisp="1.5"
                        )
                cables.createObject('CableActuator', template='Vec3',
                        name="cable2",
                        indices="5 6 7 8 9",
                        pullPoint="0 -1.5 0",
                        minForce="0",
                        maxPositiveDisp="1.5"
                        )
                cables.createObject('CableActuator', template='Vec3',
                        name="cable3",
                        indices="10 11 12 13 14",
                        pullPoint="-1.5 0 0",
                        minForce="0",
                        maxPositiveDisp="1.5"
                        )
                cables.createObject('BarycentricMapping', mapForces=False, mapMasses=False)



                accordion.createObject('CommunicationController', listening='1', job="sender", port="5558", nbDataField="4", pattern="0",
                data1="@cavity/pressure.volumeGrowth",
                data2="@cables/cable1.displacement",
                data3="@cables/cable2.displacement",
                data4="@cables/cable3.displacement")

                ##########################################
                # Visualization                          #
                ##########################################
                accordionVisu = accordion.createChild('visu')
                accordionVisu.createObject('MeshSTLLoader', filename=path+"Springy.stl", name="loader")
                accordionVisu.createObject('OglModel', src="@loader", color="0.4 0.4 0.4 0.5")
                accordionVisu.createObject('BarycentricMapping')



                return rootNode
